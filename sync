#!/usr/bin/perl
use strict;
use IPC::Run qw(start run);

sub terminate;

$SIG{INT} = sub {
    terminate;
};

$SIG{TERM} = sub {
    terminate;
};

system("rm -rf fifos");
mkdir("fifos");
system("mkfifo fifos/fuse-to-daemon fifos/daemon-to-fuse fifos/daemon-to-notifye fifos/daemon-to-lowerer fifos/remote-to-local");

system("btrfs subvolume create data");
mkdir("data");
mkdir("data/lower");
mkdir("data/upper");
mkdir("data/work");
mkdir("merge");
mkdir("mount");
mkdir("c00git");

my @ps;
my @fs;
my $path = shift;
my $arch = `uname -m`;
chomp $arch;

my $remote = shift;
my $localn = ($remote eq "10.4.0.1") ? "10.4.0.2" : "10.4.0.1";
unless (-e "data/upper/.git") {
    system("cd data/upper; git init; git branch -M main; git config user.name 'SyncFS'; git config user.email 'pipcet\@gmail.com'; git config core.compression 0; git config pull.rebase false; git remote add $remote $remote:sync/c00git; git commit --allow-empty -m 'initial empty commit'; git commit --allow-empty -m 'initial commit'");
}

run(["sudo", "mount", "-toverlay", "-olowerdir=data/lower,upperdir=data/upper,workdir=data/work,rw", "overlay", "merge"]) or die;
push @fs, "merge";
push @ps, start(["$path/$arch/c00gitfs", "data/upper", "merge", "data/lower", "c00git"]);
push @fs, "c00git";
sleep 1;
# not currently used.
push @ps, start(["$path/$arch/syncfs", "merge", "merge", "mount", "fifos"]);
push @fs, "mount";
sleep 1;
push @ps, start(["node", "$path/syncfs.mjs", "fifos", $remote]);
sleep 1;
push @ps, start(["perl", "$path/syncfs-notifier.pl", "fifos", $remote]);
sleep 1;
push @ps, start(["perl", "$path/syncfs-lowerer.pl", $localn, $remote]);
sleep 1;
# disabled; overlayfs is buggy
# push @ps, start(["perl", "$path/syncfs-colowerer.pl", $localn, $remote]);
sleep 1;

sub terminate {
    for my $p (@ps) {
	$p->kill_kill;
    }
    while (@fs) {
	my $fs = shift @fs;
	my $stdin = "";
	my $stdout = "";
	my $stderr = "";
	run(["sudo", "umount", $fs], \$stdin, \$stdout, \$stderr);
	if ($stderr =~ /not mounted/) {
	} else {
	    warn $stderr if $stderr ne "";
	    warn $stdout if $stdout ne "";
	    push @fs, $fs;
	    sleep 1;
	}
    }
    warn "All file systems unmounted. Terminating.";
    exit 0;
}

while (1) {
    sleep 1;
}
